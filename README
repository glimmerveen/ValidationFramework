The Validation Framework consists in a set of utilities and base classes to help in developing full-featured GUIs with
user interaction, by allowing to validate of user input, to assist user during input and provide feedback from the
input.

The following featured are expected:

INPUT VALIDATION
 . Instant validation (for example, on each key stroke);
 . Delayed validation (for example, when focus is lost or when the ENTER key is pressed, or when Apply button is
   pressed);
 . Validation on individual components;
 . Validation on groups of components with inter-dependencies;
 . Validation of groups within groups;
 . Syntax validation and semantic validation;

FEEDBACK
 . Immediate feedback;
 . Delayed feedback;
 . Value proposal in case of error (either automatic proposal for related components within a group), that is to say
   automatic correction of related components;
 . Conditional logic for components (for example, enabling/disabling of an Apply button in case of valid/invalid input)
 . Decorations for user assistance (icons, convenient tooltips, hints, etc.), staying close to the current
   look-and-feel;

EXTEND-ABLE FRAMEWORK
 . Most generic concepts as possible;
 . Easily pluggable to custom components;
 . Not only for Swing components;
 . Not only GUI input validation (however, this is not the focus of the framework);
 . Special components (any kind of components)
 . Custom rules (of course)
 . Custom feedbacks
 . Custom decorations;
 . Custom validation/feedback algorithms;
 . Anything useful you can imagine.
